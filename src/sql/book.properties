####################### DATABASE CONNECTIVITY DETAILS
#############################DATABASE_PROPERTIES
database.drivername=com.mysql.jdbc.Driver
database.url=jdbc:mysql://localhost:3306/salespro
database.username=root
database.password=master


RETRIVE_BOOKPACKS_SQL=SELECT BOOKID,BOOKNAME,CATID,SUBCATID,AUTHOR,PUBLISHER,BOOKPRICE,BOOKOVERVIEW,EDITION,RATING,BOOKLOC FROM BOOK

INSERT_BOOKRATING_SQL=UPDATE BOOK SET RATING=:rating WHERE BOOKID=:bookId

RETRIVE_RATING_WHERE_BOOKID_SQL=SELECT RATING FROM BOOK WHERE BOOKID=:bookId

RETRIVE_BOOKRATING_SQL=SELECT BOOKID,RATING,BOOKNAME FROM BOOK ORDER BY RATING DESC

RETRIVE_BOOKPACKS_WHERE_CATID_SQL=SELECT BOOKID,BOOKNAME,CATID,SUBCATID,AUTHOR,PUBLISHER,BOOKPRICE,BOOKOVERVIEW,EDITION,RATING,BOOKLOC FROM BOOK WHERE CATID=:catId

RETRIVE_REGISTER_USERIDS_SQL=SELECT USERID FROM LOGIN

INSERT_LOGIN_SQL=INSERT INTO LOGIN(FIRSTNAME,LASTNAME,PASSWORD,EMAIL,USERID)VALUES(?,?,?,?,?)

RETRIVE_PASSWORD_WHERE_USERID_SQL=SELECT PASSWORD FROM LOGIN WHERE USERID=?

RETRIVE_LOGINTYPE_WHERE_USERID_SQL=SELECT LOGINTYPE FROM LOGIN WHERE USERID=?

RETRIVE_ACCCOUNTNOS_SQL=SELECT ACCOUNTNO FROM BANK

RETRIVE_IPIN_WHERE_ACCNO_SQL=SELECT IPIN FROM BANK WHERE ACCOUNTNO=?

RETRIVE_BALANCE_WHERE_ACCNO_SQL=SELECT AMOUNT FROM BANK WHERE ACCOUNTNO=?

UPDATE_BALANCE_SQL=UPDATE BANK SET AMOUNT=? WHERE ACCOUNTNO=?

INSERT_TRANS_SQL=INSERT INTO TRANSACTION(CUSTOMERID,PACKID)VALUES(?,?)

INSERT_ORDERDETAILS_SQL=INSERT INTO ORDERDETAILS(BOOKID,QUANTITY)VALUES(:bookId,:quantity)

RETRIVE_EMAIL_FOR_LOGINID=SELECT EMAIL FROM LOGIN WHERE USERID=:loginId

INSERT_ORDERINFO_SQL=INSERT INTO ORDERINFO(LOGINID,ORDERDATE,TOTALAMOUNT,EMAIL)VALUES(:loginId,:orderDate,:totalAmt,:email)

RETRIVE_SETTINGSUSER_SQL=SELECT LOGINID FROM SETTINGS

INSERT_SETTINGS_SQL=INSERT INTO SETTINGS(LOGINID,THRESHOLD) VALUES(:loginId,:threshold)

UPDATE_SETTINGS_SQL=UPDATE SETTINGS SET THRESHOLD=:threshold WHERE LOGINID=:loginId

RETRIVE_THRESHOLD_FOR_LOGINID=SELECT THRESHOLD FROM SETTINGS WHERE LOGINID=:loginId

RETRIVE_BOOKIDS_FROM_ORDER_DETAILS_SQL=SELECT DISTINCT BOOKID FROM ORDERDETAILS WHERE ORDERID IN (SELECT ORDERID FROM ORDERINFO WHERE LOGINID =:loginId)

RETRIVE_BOOKIDS_FROM_BOOKID_LOGINID_SQL= SELECT COUNT(*) FROM ORDERDETAILS WHERE ORDERID IN(SELECT ORDERID FROM ORDERINFO WHERE LOGINID =:loginId) AND BOOKID=:bookId 

RETRIVE_BOOKPACKS_WHERE_BOOKID_SQL=SELECT BOOKID,BOOKNAME,CATID,SUBCATID,AUTHOR,PUBLISHER,BOOKPRICE,BOOKOVERVIEW,EDITION,RATING,BOOKLOC FROM BOOK WHERE BOOKID=:bookId

RETRIVE_BOOKRATING_NOT_ZERO_SQL=SELECT BOOKID,RATING,BOOKNAME FROM BOOK WHERE RATING>=4 ORDER BY RATING DESC

INSERT_USER_INFO_SQL= INSERT INTO USERINFO(USERID,NOOFBYTES,PAGEID,TIMEOFSTAY) VALUES(:userId,:noOfBytes,:pageId,:timeOfStay)

RETRIVE_NOOFADV_WHERE_USERID_PAGEID_SQL=SELECT COUNT(*) FROM advistisement WHERE USERID=:userId AND PAGEID=:pageId

RETRIVE_DISTINCTUSERIDS_FROM_USERINFO_SQL=SELECT DISTINCT USERID FROM USERINFO

RETRIVE_DISTINCT_PAGEIDS_FROM_USERINFO_WHERE_USERID_SQL=SELECT DISTINCT PAGEID FROM USERINFO WHERE USERID=:userId

RETRIVE_USERINFO_FROM_USERINFO_WHERE_USERID_PAGEID_SQL=SELECT SUM(NOOFBYTES) AS TOTALBYTES,SUM(TIMEOFSTAY) AS TOTALTIME FROM USERINFO WHERE USERID=:userId AND PAGEID=:pageId
 
RETRIVE_COUNT_FROM_USERINFO_WHERE_USERID_PAGEID=SELECT COUNT(*) FROM USERINFO WHERE USERID=:userId AND PAGEID = :pageId

RETRIVE_DISTINCTS_USER_SQL=SELECT DISTINCT USERID FROM USERINFO

RETRIVE_DISTINCT_COUNT_OF_USERID_WHERE_PAGEID_SQL=SELECT DISTINCT USERID FROM USERINFO WHERE PAGEID=:pageId 

DELETE_ADV_USERID_SQL = DELETE FROM advistisement WHERE USERID =:userId

INSERT_ADVITISEMENT_SQL = INSERT INTO advistisement(ADVDETAIL,USERID,PAGEID) VALUES(:advDet,:userId,:pageId)

UPDATE_NOOFADV_SQL = UPDATE USERINFO SET NOOFADV = 1 WHERE USERID =:userId AND PAGEID =:pageId

RETRIVE_ADV_FOR_LOGINID_AND_PAGEID =SELECT ADVDETAIL FROM advistisement WHERE USERID =:userId AND PAGEID =:pageId

RETRIVE_USERIDS_FROM_BUDGET_SQL=SELECT LOGINID FROM BUDGET 

INSERT_BUDGET_SQL=INSERT INTO BUDGET(LOGINID,AMOUNT) VALUES(:LOGINID,:AMOUNT)

UPDATE_BUDGET_SQL=UPDATE BUDGET SET AMOUNT=:AMOUNT WHERE LOGINID=:LOGINID

RETRIVE_SUM_BUDGET_SQL_FOR_LOGINID=SELECT SUM(TOTALAMOUNT) AS AMOUNT FROM ORDERINFO WHERE LOGINID=:LOGINID 

RETRIVE_BUDGET_FOR_LOGINID_SQL=SELECT AMOUNT FROM BUDGET WHERE LOGINID=:LOGINID

INSERT_HABITATFILE_SQL=INSERT INTO HABITATFILE(SESSIONAPPID,ACTIONNAME,ACTIONTYPE,IPADDRESS,USERNAME,DATE) VALUES(:SESSIONAPPID,:ACTIONNAME,:ACTIONTYPE,:IPADDRESS,:USERNAME,:DATE)

DELETE_LICENSEUSER_WHERE_USERNAME_SQL=DELETE FROM LICENSEUSER WHERE USERNAME=:USERNAME

INSERT_LICENSES_FOR_USER_SQL=INSERT INTO LICENSEUSER(USERNAME,LICENSEID,LICENSENAME) VALUES(:USERNAME,:LICENSEID,:LICENSENAME)

RETRIVE_LICENSEINFO_WHERE_USERNAME_SQL=SELECT USERNAME,LICENSEID,LICENSENAME FROM LICENSEUSER WHERE USERNAME=:USERNAME

RETRIVE_LICENSENAME_WHERE_USERNAME_SQL=SELECT LICENSENAME FROM LICENSEUSER WHERE USERNAME=:USERNAME

RETRIVE_HABITATFILE_WHERE_USERNAME_SQL=SELECT SESSIONAPPID,ACTIONNAME,ACTIONTYPE,IPADDRESS,USERNAME,DATE,TIMEOFACTION FROM HABITATFILE WHERE USERNAME=:USERNAME

RETRIVE_HABITATFILE_SESSION_WHERE_USERNAME_SQL=SELECT DISTINCT SESSIONAPPID FROM HABITATFILE WHERE USERNAME=:USERNAME

RETRIVE_HABITATFILE_WHERE_USERNAME_AND_SESSIONAPP_SQL=SELECT SESSIONID,SESSIONAPPID,ACTIONNAME,ACTIONTYPE,IPADDRESS,USERNAME,DATE,TIMEOFACTION FROM HABITATFILE WHERE USERNAME=:USERNAME AND SESSIONAPPID=:SESSIONAPPID

############## K Means Implementation

RETRIVE_DISTINCT_PRODUCTIDS_SQL=SELECT DISTINCT BOOKID FROM book

RETRIVE_COUNT_WHERE_PRODUCTID_SQL=SELECT COUNT(*) AS COUNTER FROM orderdetails WHERE BOOKID=?

RETRIVE_DISTINCT_ORDERDATE_FROM_ORDERINFO_WHERE_PRODUCTID_SQL=SELECT DISTINCT ORDERDATE FROM orderinfo WHERE ORDERID IN(SELECT ORDERID FROM orderdetails WHERE BOOKID=?)

INSERT_KMEANS_EXTENDED_SQL=INSERT INTO KMEANS(PRODUCTID,FREQUENCY,NOOFDAYS,DISTANCEC1,DISTANCEC2,DISTANCEC3,MINDISTANCE,CLUSTERNO) VALUES(:PRODUCTID,:FREQUENCY,:NOOFDAYS,:DISTANCEC1,:DISTANCEC2,:DISTANCEC3,:MINDISTANCE,:CLUSTERNO)

DELETE_KMEANS_SQL=DELETE FROM KMEANS

RETRIVE_KMEANS_SQL=SELECT PRODUCTID,FREQUENCY,NOOFDAYS,DISTANCEC1,DISTANCEC2,DISTANCEC3,MINDISTANCE,CLUSTERNO FROM KMEANS

RETRIVE_DISTINCT_COUNT_FROM_KMEANS_WHERE_CLUSTERNO_SQL=SELECT COUNT(*) FROM KMEANS WHERE CLUSTERNO=:CLUSTERNO

RETRIVE_DISTINCT_USERIDS_FROM_LOGIN=SELECT DISTINCT USERID FROM LOGIN WHERE LOGINTYPE=:LOGINTYPE

RETRIVE_COUNT_WHERE_USERID_SQL=SELECT COUNT(*) FROM orderinfo  WHERE LOGINID=? 

RETRIVE_TOTALSPEND_WHERE_USERID_SQL=SELECT SUM(TOTALAMOUNT) AS AMOUNT FROM orderinfo  WHERE LOGINID=?

RETRIVE_MAXDATE_WHERE_USERID_SQL=SELECT MAX(ORDERDATE) AS ORDERDATE FROM orderinfo  WHERE LOGINID=:LOGINID

INSERT_RFM_SQL=INSERT INTO RFM(USERID,RECENCY,FREQUENCY,MONETORY) VALUES(:USERID,:RECENCY,:FREQUENCY,:MONETORY)

INSERT_RFMWEIGHT_SQL=INSERT INTO rfmweight(USERID,RECENCY,FREQUENCY,MONETORY,RECENCYWEIGHT,MONETORYWEIGHT,FREQUENCYWEIGHT,RFMWEIGHT) VALUES(:USERID,:RECENCY,:FREQUENCY,:MONETORY,:RECENCYWEIGHT,:MONETORYWEIGHT,:FREQUENCYWEIGHT,:RFMWEIGHT)

DELETE_RFM_SQL=DELETE FROM RFM

RETRIVE_USERIDS_SORT_BY_FREQ_FROM_RFM_SQL=SELECT DISTINCT USERID FROM rfm ORDER BY FREQUENCY ASC

RETRIVE_USERIDS_SORT_BY_RECENCY_FROM_RFM_SQL=SELECT DISTINCT USERID FROM rfm ORDER BY RECENCY DESC

RETRIVE_USERIDS_SORT_BY_MONETORY_FROM_RFM_SQL=SELECT DISTINCT USERID FROM rfm ORDER BY MONETORY ASC

DELETE_RFMWEIGHT_SQL=DELETE FROM rfmweight

RETRIVE_RFMWEIGHT_SQL=SELECT RFMID,USERID,RECENCY,FREQUENCY,MONETORY,RECENCYWEIGHT,MONETORYWEIGHT,FREQUENCYWEIGHT,RFMWEIGHT FROM rfmweight

RETRIVE_RFMWEIGHT_ORDERBY_RFM_SQL=SELECT RFMID,USERID,RECENCY,FREQUENCY,MONETORY,RECENCYWEIGHT,MONETORYWEIGHT,FREQUENCYWEIGHT,RFMWEIGHT FROM rfmweight ORDER BY RFMWEIGHT DESC

INSERT_BLOCK_CUSTOMER_SQL=INSERT INTO RFMCLASSIFY(USERID,CLUSTERNO,RFM,CLUSTERNAME) VALUES(:USERID,:CLUSTERNO,:RFM,:CLUSTERNAME)

DELETE_CLASSIFICATION_RFM_SQL=DELETE FROM rfmclassify


RETRIVE_DISTINCT_COUNT_FROM_RFMCLUSTER_WHERE_CLUSTERNO_SQL=SELECT COUNT(*) FROM RFMCLASSIFY WHERE CLUSTERNO=:CLUSTERNO

RETRIVE_CUSTOMER_RFM_CLUSTER_SQL=SELECT USERID,CLUSTERNO,RFM,CLUSTERNAME FROM rfmclassify

RETRIVE_CLUSTERNO_FROM_RFM_WHERE_USERID_SQL=SELECT CLUSTERNO FROM RFMCLASSIFY WHERE USERID=?

RETRIVE_PRODUCTIDS_FROM_KMEANS_WHERE_CLUSTERNO_SQL=SELECT DISTINCT PRODUCTID FROM KMEANS WHERE CLUSTERNO=?

RETRIVE_BOOKPACKS_WHERE_BOOKID_IN_SQL=SELECT BOOKID,BOOKNAME,CATID,SUBCATID,AUTHOR,PUBLISHER,BOOKPRICE,BOOKOVERVIEW,EDITION,RATING,BOOKLOC FROM BOOK WHERE BOOKID IN(:bookId)

RETRIVE_RFMWEIGHT_PAGINATION_SQL=SELECT RFMID,USERID,RECENCY,FREQUENCY,MONETORY,RECENCYWEIGHT,MONETORYWEIGHT,FREQUENCYWEIGHT,RFMWEIGHT FROM rfmweight limit :LIMIT offset :OFFSET

RETRIVE_RFMWEIGHT_COUNT_SQL=SELECT COUNT(*) AS COUNTER FROM rfmweight

RETRIVE_CUSTOMER_RFM_CLUSTER_PAGINATION_SQL=SELECT USERID,CLUSTERNO,RFM,CLUSTERNAME FROM rfmclassify limit :LIMIT offset :OFFSET

RETRIVE_CUSTOMER_RFM_CLUSTER_COUNT_SQL=SELECT COUNT(*) AS COUNTER FROM rfmclassify

RETRIVE_KMEANS_PAGINATION_SQL=SELECT PRODUCTID,FREQUENCY,NOOFDAYS,DISTANCEC1,DISTANCEC2,DISTANCEC3,MINDISTANCE,CLUSTERNO FROM KMEANS limit :LIMIT offset :OFFSET

RETRIVE_KMEANS_COUNT_SQL=SELECT COUNT(*) AS COUNTER FROM KMEANS

